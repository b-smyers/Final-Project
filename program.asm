; Store 2 values in data memory
; A = 0x2000 $1
; B = 0x3000 $2
; Mulitply them using repeated addition
; Store result in data memory 0x4000
;
; Address 0x4000 is stored in $3 initially
;
;
; Multiplication Program:
; Init
addi $1, $0, 0x2000 ; 0x1000: A ($1) = $0 + 0x2000
addi $2, $0, 0x3000 ; 0x1004: B ($2) = $0 + 0x3000
addi $4, $0, 0x0000 ; 0x1008: N ($4) = $0 + 0x0000
addi $5, $0, 0x0000 ; 0x100c: S ($5) = $0 + 0x0000
; Mult
add  $6, $5, $1     ; 0x1010: T ($6) = S ($5) + A ($1)
add  $5, $0, $6     ; 0x1014: S ($5) = $0 + T ($6)
addi $6, $4, 0x0001 ; 0x1018: T ($6) = N ($4) + 0x0001
add  $4, $0, $6     ; 0x101c: N ($4) = $0 + T ($6)
bne  $4, $2, 0xFFFB ; 0x1020: While N ($4) != B ($2)
; Store
sw   $5, $3, 0x0000 ; 0x1024: S ($5) -> Addr ($3) + Offset (0x0000)
; Finish

; Binary instructions:
; Init
; 0x1000: 001000 00000 00001 0010000000000000
; 0x1004: 001000 00000 00010 0011000000000000
; 0x1008: 001000 00000 00100 0000000000000000
; 0x100c: 001000 00000 00101 0000000000000000
; Mult
; 0x1010: 000000 00101 00001 00110 00000 100000
; 0x1014: 000000 00000 00110 00101 00000 100000
; 0x1018: 001000 00100 00110 0000000000000001
; 0x101c: 000000 00000 00110 00100 00000 100000
; 0x1020: 000101 00100 00010 1111111111111011
; Store
; 0x1024: 101011 00101 00011 0000000000000000
; Finish


; Address 0x4000 stored in $3 initially
; Store Word Program:
addi $1, $0, 0X6969 ; 0x1000: A ($1) = $0 + 0x6969
sw   $1, $3, 0x0000 ; 0x1004: A ($1) -> Addr ($3) + Offset (0x0000)

; Binary Instructions:
; 0x1000: 001000 00000 00001 0110100101101001
; 0x1004: 101011 00001 00011 0000000000000000
